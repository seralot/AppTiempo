{"remainingRequest":"/home/revelio/proyectos/AppTiempo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/revelio/proyectos/AppTiempo/src/components/Visor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/revelio/proyectos/AppTiempo/src/components/Visor.vue","mtime":1571736541330},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data () {\n      return {\n        fecha: null\n      }\n    },\n    mounted () {\n      this.fecha = new Date();\n    },\n    props: {\n        ciudad: Object\n    },\n    // Computed properties\n    computed: {\n      // La variable tempEntero devuelve la temperatura de la ciudad sin decimales\n      tempEntero: function() {\n        return parseInt(this.ciudad.temp);\n      },\n      hora: function(){\n        if(this.fecha){\n        return this.fecha.getHours()+\":\"+this.fecha.getMinutes();\n        }else{\n          return \"\";\n        }\n      }\n    },\n    // Filtro para poner en mayusculas un string\n    filters: {\n      capitalize: function(value) {\n         return value.toUpperCase();\n      }\n    }\n}\n",{"version":3,"sources":["Visor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Visor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div v-if=\"ciudad\" >\n    <div>\n      <b-card\n        class=\"text-left\"\n        :title=\"`${ciudad.nombre}`\"\n        :sub-title=\"`${this.hora}`\">\n      <b-card-text>\n        <p>{{ciudad.estado | capitalize}}</p>\n        <div class=\"d-flex justify-content-center\">\n          <img :src=\"`http://openweathermap.org/img/wn/${ ciudad.icon }.png`\" alt=\"Estado\" class=\"icono mb-1 mr-2 col-4\">\n          <h1 class=\"display-1\">{{ tempEntero }}º</h1>\n        </div>\n      </b-card-text>\n      </b-card>\n     </div>\n  </div>\n  <div v-else>\n     <p class=\"bg-danger text-white font-weight-bold rounded\">No se encontró la ubicación</p> \n  </div>\n</template>\n\n<script>\nexport default {\n    data () {\n      return {\n        fecha: null\n      }\n    },\n    mounted () {\n      this.fecha = new Date();\n    },\n    props: {\n        ciudad: Object\n    },\n    // Computed properties\n    computed: {\n      // La variable tempEntero devuelve la temperatura de la ciudad sin decimales\n      tempEntero: function() {\n        return parseInt(this.ciudad.temp);\n      },\n      hora: function(){\n        if(this.fecha){\n        return this.fecha.getHours()+\":\"+this.fecha.getMinutes();\n        }else{\n          return \"\";\n        }\n      }\n    },\n    // Filtro para poner en mayusculas un string\n    filters: {\n      capitalize: function(value) {\n         return value.toUpperCase();\n      }\n    }\n}\n</script>\n\n<style>\n\n</style>"]}]}