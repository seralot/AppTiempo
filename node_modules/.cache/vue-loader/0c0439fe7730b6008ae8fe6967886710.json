{"remainingRequest":"/home/revelio/proyectos/AppTiempo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/revelio/proyectos/AppTiempo/src/components/Buscador.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/revelio/proyectos/AppTiempo/src/components/Buscador.vue","mtime":1571740669557},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {API_KEY, URL} from '../services/services';\nimport axios from 'axios';\nimport _ from 'lodash';\nexport default {\n  name: \"buscador\",\n  data () {\n    return {\n      param: null,\n      ciudades: null,\n      buscando: false,\n      ciudadEncontrada: {\n         nombre: null,\n         temp: null,\n         estado: null,\n         icon: null,\n         fecha: null}\n    }\n  },\n  mounted (){\n    if(this.$route.query.ubicacion){\n      this.search(this.$route.query.ubicacion);\n    }\n    this.throttledMethod();\n  },\n  methods: {\n    changeUrl(){\n      this.$router.push({ name: 'detalles', query: { ubicacion: this.param } }).catch(err => { });\n    },\n    throttledMethod: _.debounce(function() {\n      this.changeUrl();\n    }, 1000),\n    search: function(ubicacion) {\n      this.buscando = true\n      axios\n     .get(URL+ubicacion+\n     '&units=metric&lang=es&APPID='+API_KEY)\n     .then(response => {\n       this.ciudades = response.data;\n       this.ciudadEncontrada.nombre = this.ciudades.name;\n       this.ciudadEncontrada.temp = this.ciudades.main.temp;\n       this.ciudadEncontrada.estado = this.ciudades.weather[0].description;\n       this.ciudadEncontrada.icon = this.ciudades.weather[0].icon;\n       this.ciudadEncontrada.fecha = this.ciudades.dt;\n     }).catch(()=> {\n       this.ciudadEncontrada = {\n         nombre: null,\n         temp: null,\n         estado: null,\n         icon: null}\n     }).finally(() => {\n        this.buscando = false\n        if (this.ciudadEncontrada.nombre) {\n          this.$emit('change', this.ciudadEncontrada)\n        } else {\n          this.$emit('change', null)\n        }\n     })\n    }\n  },\n   watch: {\n    $route(to, from) {\n      if(this.$route.query.ubicacion){\n        this.search(this.$route.query.ubicacion)\n      }\n    }\n  }\n};\n",{"version":3,"sources":["Buscador.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Buscador.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-form @submit.stop.prevent=\"changeUrl()\">\n    <b-form-group id=\"input-group-1\" label=\"Ubicación: \" label-for=\"input-1\">\n      <div class=\"d-flex justify-content-center\">\n        <b-form-input @input=\"throttledMethod()\" @keyup.enter=\"changeUrl()\" v-model=\"param\"  id=\"input-1\" required placeholder=\"Ubicación\"></b-form-input>\n      </div>\n    </b-form-group>\n    <p v-if=\"buscando\">Buscando...</p>\n  </b-form>\n</template>\n\n<script>\nimport {API_KEY, URL} from '../services/services';\nimport axios from 'axios';\nimport _ from 'lodash';\nexport default {\n  name: \"buscador\",\n  data () {\n    return {\n      param: null,\n      ciudades: null,\n      buscando: false,\n      ciudadEncontrada: {\n         nombre: null,\n         temp: null,\n         estado: null,\n         icon: null,\n         fecha: null}\n    }\n  },\n  mounted (){\n    if(this.$route.query.ubicacion){\n      this.search(this.$route.query.ubicacion);\n    }\n    this.throttledMethod();\n  },\n  methods: {\n    changeUrl(){\n      this.$router.push({ name: 'detalles', query: { ubicacion: this.param } }).catch(err => { });\n    },\n    throttledMethod: _.debounce(function() {\n      this.changeUrl();\n    }, 1000),\n    search: function(ubicacion) {\n      this.buscando = true\n      axios\n     .get(URL+ubicacion+\n     '&units=metric&lang=es&APPID='+API_KEY)\n     .then(response => {\n       this.ciudades = response.data;\n       this.ciudadEncontrada.nombre = this.ciudades.name;\n       this.ciudadEncontrada.temp = this.ciudades.main.temp;\n       this.ciudadEncontrada.estado = this.ciudades.weather[0].description;\n       this.ciudadEncontrada.icon = this.ciudades.weather[0].icon;\n       this.ciudadEncontrada.fecha = this.ciudades.dt;\n     }).catch(()=> {\n       this.ciudadEncontrada = {\n         nombre: null,\n         temp: null,\n         estado: null,\n         icon: null}\n     }).finally(() => {\n        this.buscando = false\n        if (this.ciudadEncontrada.nombre) {\n          this.$emit('change', this.ciudadEncontrada)\n        } else {\n          this.$emit('change', null)\n        }\n     })\n    }\n  },\n   watch: {\n    $route(to, from) {\n      if(this.$route.query.ubicacion){\n        this.search(this.$route.query.ubicacion)\n      }\n    }\n  }\n};\n</script>\n\n<style>\n</style>"]}]}