{"remainingRequest":"/home/revelio/proyectos/AppTiempo/node_modules/babel-loader/lib/index.js!/home/revelio/proyectos/AppTiempo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/revelio/proyectos/AppTiempo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/revelio/proyectos/AppTiempo/src/components/Buscador.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/revelio/proyectos/AppTiempo/src/components/Buscador.vue","mtime":1571740669557},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/revelio/proyectos/AppTiempo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { API_KEY, URL } from \"../services/services\";\nimport axios from 'axios';\nimport _ from 'lodash';\nexport default {\n  name: \"buscador\",\n  data: function data() {\n    return {\n      param: null,\n      ciudades: null,\n      buscando: false,\n      ciudadEncontrada: {\n        nombre: null,\n        temp: null,\n        estado: null,\n        icon: null,\n        fecha: null\n      }\n    };\n  },\n  mounted: function mounted() {\n    if (this.$route.query.ubicacion) {\n      this.search(this.$route.query.ubicacion);\n    }\n\n    this.throttledMethod();\n  },\n  methods: {\n    changeUrl: function changeUrl() {\n      this.$router.push({\n        name: 'detalles',\n        query: {\n          ubicacion: this.param\n        }\n      }).catch(function (err) {});\n    },\n    throttledMethod: _.debounce(function () {\n      this.changeUrl();\n    }, 1000),\n    search: function search(ubicacion) {\n      var _this = this;\n\n      this.buscando = true;\n      axios.get(URL + ubicacion + '&units=metric&lang=es&APPID=' + API_KEY).then(function (response) {\n        _this.ciudades = response.data;\n        _this.ciudadEncontrada.nombre = _this.ciudades.name;\n        _this.ciudadEncontrada.temp = _this.ciudades.main.temp;\n        _this.ciudadEncontrada.estado = _this.ciudades.weather[0].description;\n        _this.ciudadEncontrada.icon = _this.ciudades.weather[0].icon;\n        _this.ciudadEncontrada.fecha = _this.ciudades.dt;\n      }).catch(function () {\n        _this.ciudadEncontrada = {\n          nombre: null,\n          temp: null,\n          estado: null,\n          icon: null\n        };\n      }).finally(function () {\n        _this.buscando = false;\n\n        if (_this.ciudadEncontrada.nombre) {\n          _this.$emit('change', _this.ciudadEncontrada);\n        } else {\n          _this.$emit('change', null);\n        }\n      });\n    }\n  },\n  watch: {\n    $route: function $route(to, from) {\n      if (this.$route.query.ubicacion) {\n        this.search(this.$route.query.ubicacion);\n      }\n    }\n  }\n};",{"version":3,"sources":["Buscador.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-form @submit.stop.prevent=\"changeUrl()\">\n    <b-form-group id=\"input-group-1\" label=\"Ubicación: \" label-for=\"input-1\">\n      <div class=\"d-flex justify-content-center\">\n        <b-form-input @input=\"throttledMethod()\" @keyup.enter=\"changeUrl()\" v-model=\"param\"  id=\"input-1\" required placeholder=\"Ubicación\"></b-form-input>\n      </div>\n    </b-form-group>\n    <p v-if=\"buscando\">Buscando...</p>\n  </b-form>\n</template>\n\n<script>\nimport {API_KEY, URL} from '../services/services';\nimport axios from 'axios';\nimport _ from 'lodash';\nexport default {\n  name: \"buscador\",\n  data () {\n    return {\n      param: null,\n      ciudades: null,\n      buscando: false,\n      ciudadEncontrada: {\n         nombre: null,\n         temp: null,\n         estado: null,\n         icon: null,\n         fecha: null}\n    }\n  },\n  mounted (){\n    if(this.$route.query.ubicacion){\n      this.search(this.$route.query.ubicacion);\n    }\n    this.throttledMethod();\n  },\n  methods: {\n    changeUrl(){\n      this.$router.push({ name: 'detalles', query: { ubicacion: this.param } }).catch(err => { });\n    },\n    throttledMethod: _.debounce(function() {\n      this.changeUrl();\n    }, 1000),\n    search: function(ubicacion) {\n      this.buscando = true\n      axios\n     .get(URL+ubicacion+\n     '&units=metric&lang=es&APPID='+API_KEY)\n     .then(response => {\n       this.ciudades = response.data;\n       this.ciudadEncontrada.nombre = this.ciudades.name;\n       this.ciudadEncontrada.temp = this.ciudades.main.temp;\n       this.ciudadEncontrada.estado = this.ciudades.weather[0].description;\n       this.ciudadEncontrada.icon = this.ciudades.weather[0].icon;\n       this.ciudadEncontrada.fecha = this.ciudades.dt;\n     }).catch(()=> {\n       this.ciudadEncontrada = {\n         nombre: null,\n         temp: null,\n         estado: null,\n         icon: null}\n     }).finally(() => {\n        this.buscando = false\n        if (this.ciudadEncontrada.nombre) {\n          this.$emit('change', this.ciudadEncontrada)\n        } else {\n          this.$emit('change', null)\n        }\n     })\n    }\n  },\n   watch: {\n    $route(to, from) {\n      if(this.$route.query.ubicacion){\n        this.search(this.$route.query.ubicacion)\n      }\n    }\n  }\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":"src/components"}]}